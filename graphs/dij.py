'''
В данном файле представлена реализация алгоритма Дейкстры.
Для хранения графа используется список смежности (пара вида <вершина, длина ребра к ней>).
'''
g = {
        1: [(2, 3), (3, 1), (4, 3)], # vertex, weight
        2: [(1, 3), (3, 4)],
        3: [(1, 1), (2, 4), (5, 7), (6, 5)],
        4: [(1, 3), (6, 2)],
        5: [(3, 7), (6, 4)],
        6: [(3, 5), (4, 2), (5, 4)]
    }

N = 6 # количество вершин в графе

v = 1 # стартовая вершина
S = {v} # просмотренные вершины

import math
T = [math.inf] * (N + 1) # нумерация будет с единицы
T[v] = 0
T[0] = -1
P = [v] * (N + 1)
P[v] = 0

while v != -1:
    for u, c in g[v]:
        if u not in S:
            w = T[v] + c
            if w < T[u]:
                T[u] = w
                P[u] = v
    
    amin = -1
    m = max(T)
    for i, t in enumerate(T):
        if i == 0:
            continue
        if t < m and i not in S:
            m = t
            amin = i
    
    v = amin
    if v > 0:
        S.add(v)
    # break

print(f'costs {T[1:]}')
print(f'paths {P[1:]}')
